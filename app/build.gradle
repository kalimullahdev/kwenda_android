//noinspection DuplicatePlatformClasses
apply plugin: 'com.android.application'

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.kwendaapp.rideo"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 52
        versionName "7.1"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        archivesBaseName = "User_$versionName"

    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
        exclude module: 'httpclient'
    }
    lintOptions {
        // if true, stop the gradle build if errors are found
        abortOnError false
        // turn on the given issue id's
        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
    buildTypes {
        release {
            debuggable false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    ndkVersion '22.0.7026061'

}

//repositories {
//    jcenter()
//    mavenCentral() // jcenter() works as well because it pulls from Maven Central
//}

def getVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--first-parent', '--count', 'master'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    }
    catch (ignored) {
        return -1
    }
}
def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.0.0'
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.1'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //For error logcat
    implementation 'io.nlopez.smartlocation:library:3.3.3'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.airbnb.android:lottie:4.2.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.23'
    implementation 'com.mikhaellopez:circularimageview:4.3.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.github.jkwiecien:EasyImage:2.0.4'
    implementation 'com.nabinbhandari.android:permissions:3.8'
    //noinspection GradleCompatible
    implementation('com.paytm:pgplussdk:1.2.3') {
        transitive = true
    }
    implementation 'com.github.franmontiel:LocaleChanger:0.9.2'
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-maps:18.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // implementation 'com.google.android.gms:play-services-places:17.0.0'


    implementation 'com.google.android.libraries.places:places:2.5.0'


    implementation 'com.pesapal.android:pesapalandroid:1.0.8'
    implementation 'com.google.firebase:firebase-messaging:23.0.0'
    implementation 'com.google.firebase:firebase-messaging-directboot:23.0.0'
    implementation 'com.google.firebase:firebase-core:20.0.0'
    implementation "com.google.firebase:firebase-config:21.0.1"


    // Google Api Client library and Android extension
    implementation 'com.google.api-client:google-api-client:1.32.2'
    implementation 'com.google.api-client:google-api-client-android:1.32.2'


    implementation 'com.razorpay:checkout:1.6.15'
    implementation 'com.braintreepayments:card-form:3.3.0'
    implementation 'com.github.flutterwave.rave-android:rave_android:2.1.37'
//    implementation 'com.github.flutterwave.rave-android:rave_android:2.1.13'
    implementation 'com.stripe:stripe-android:8.1.0'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.h6ah4i.android.materialshadowninepatch:materialshadowninepatch:1.0.0'
    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'
    implementation 'com.koushikdutta.ion:ion:3.1.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.github.citux:datetimepicker:0.3.0'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.chaos.view:pinview:1.3.2'
    testImplementation 'junit:junit:4.13.2'
    implementation 'com.hbb20:ccp:2.5.4'
    implementation 'com.shreyaspatil:EasyUpiPayment:1.1'
    implementation 'com.wangsun.upi.payment:upi-payment:0.0.5'
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation('com.paypal.sdk:paypal-android-sdk:2.16.0') {
        exclude group: 'io.card'
    }
    //Facebook
    implementation 'com.facebook.android:facebook-android-sdk:12.1.0'
    implementation 'com.facebook.android:account-kit-sdk:5.4.0'

    //AppBajar lib
    implementation 'com.aapbd:appbajar-lib:1.0.2'
    implementation 'com.google.firebase:firebase-auth:21.0.1'
    implementation 'com.google.firebase:firebase-analytics:20.0.0'

    // Add the Firebase SDK for Crashlytics.
    implementation 'com.google.firebase:firebase-crashlytics:18.2.4'

    configurations {
        all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    }
}


apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
